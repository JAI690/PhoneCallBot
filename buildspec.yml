version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "637423663433" # Cambia por tu cuenta de AWS
    AWS_DEFAULT_REGION: "us-east-1" # Cambia por tu regiÃ³n

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Building Docker image...
      - docker build -t lambda-vonage-api .
      - docker tag lambda-vonage-api:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/lambda-vonage-api:latest
  post_build:
    commands:
      - echo Pushing Docker image to ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/lambda-vonage-api:latest
      - echo "Checking if stack exists..."
      - |
        STACK_EXISTENCE=$(aws cloudformation describe-stacks --stack-name call-bot 2>&1) || echo "Stack does not exist"
        if echo $STACK_EXISTENCE | grep -q 'does not exist'; then
          echo "Creating CloudFormation stack..."
          aws cloudformation create-stack --stack-name call-bot --template-body file://template.yml --capabilities CAPABILITY_IAM
        else
          echo "Updating CloudFormation stack..."
          AWS_OUTPUT=$(aws cloudformation update-stack --stack-name call-bot --template-body file://template.yml --capabilities CAPABILITY_IAM 2>&1) || echo "Update failed: $AWS_OUTPUT"
        fi
artifacts:
  files:
    - '**/*'